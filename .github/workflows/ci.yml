name: CI

on:
  push:
    branches: [main, release/*]
  pull_request:
    branches: [main, release/*]
    types: [opened, synchronize, reopened]

env:
  CI: true

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      - name: Fetch branches
        run: |
          git fetch origin main:main
          git fetch origin ${{ github.head_ref }}:${{ github.head_ref }} || true
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            .nx/cache
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

  lint:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      - name: Fetch branches
        run: |
          git fetch origin main:main
          git fetch origin ${{ github.head_ref }}:${{ github.head_ref }} || true
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Restore cached node modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            .nx/cache
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: Run lint
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            npx nx affected -t lint --parallel=3 --base=origin/main --head=HEAD --skip-nx-cache
          else
            npx nx affected -t lint --parallel=3 --all --skip-nx-cache
          fi

  build:
    needs: [lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      - name: Fetch branches
        run: |
          git fetch origin main:main
          git fetch origin ${{ github.head_ref }}:${{ github.head_ref }} || true
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Restore cached node modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            .nx/cache
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: Build
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            npx nx affected -t build --parallel=3 --configuration=production --base=origin/main --head=HEAD --skip-nx-cache
          else
            npx nx affected -t build --parallel=3 --configuration=production --all --skip-nx-cache
          fi
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 7

  status-check:
    needs: [build, lint]
    runs-on: ubuntu-latest
    steps:
      - name: Status Check
        run: |
          echo "All checks completed successfully!"
          exit 0
